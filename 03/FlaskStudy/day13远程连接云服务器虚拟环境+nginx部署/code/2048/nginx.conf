user  root; # 登录的用户名
worker_processes  1; # 指定Nginx开启的子进程数，多核CPU建议设置和CPU数量一样的进程数

error_log  /var/log/nginx/error.log warn;   # 用来定义全局错误日志文件，通常放在var中，level有 debug，info，notice，warn，error，crit

pid        /var/run/nginx.pid;              # 指定进程id的存储文件位置

# 指定工作模式和以及连接上限
events {
    worker_connections 1024; # 定义nginx每个进程的最大连接数
}

# 最核心的模块，主要负责http服务器相关配置，包含server，upstream子模块
http {
    include       /etc/nginx/mime.types;    # 设置文件的mime类型
    default_type  application/octet-stream; # 设置默认类型为二进制流，文件类型未知时就会使用默认

    # 设置日志格式
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main; # 指定虚拟主机的访问日志存放路径

    sendfile        on;
    # tcp_nopush     on;

    keepalive_timeout  65;

    # gzip  on;

    # 一个服务器
    server {
        listen       80;            # 指定虚拟主机监听的端口
        server_name  localhost;     # 指定ip地址或域名，多个域名使用空格隔开

        # charset koi8-r;
        # access_log  /var/log/nginx/host.access.log  main;

        location / {
            root   /root/myproject/2048;    # 指定这个虚拟主机的根目录
            index  index.html index.htm;    # 指定默认首页
        }

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }
}
