深拷贝和浅拷贝
	1 拷贝简单可变的数据类型的时候  a = [] 
		深拷贝和浅拷贝是一样的 都会开辟新的空间存储数据 可以保证数据的独立性
	2 拷贝有嵌套的复杂的数据类型  a =  [[],[]]
		浅拷贝 开辟一片空间 存放拷贝对象的地址 没办法保证数据的独立性
		深拷贝 开辟多片空间 存放拷贝对象的具体数据和地址  保证数据的独立性
	3 拷贝不可变的数据类型()
		深拷贝和浅拷贝都一样 都不会开辟新的空间 而是直接引用了被拷贝的数据的地址
	4 拷贝不可变的数据类型中嵌套了可变数据类型
		浅拷贝:只关心最外的数据类型是什么  如果是不可变的数据类型 直接引用 没有办法保证数据的独立性
		深拷贝:这个数据是否有可变的数据类型  如果有它就会开辟多个空间存储数据和地址 达到保证数据独立性的作用
	5 切片拷贝,字典拷贝
		在python中多数情况下都是浅拷贝 

单置下划线 防止 from 模块 import * 这种方式导入我们不想让他导入变量
私有属性 不能真正的保证数据的安全性 可以被外部直接访问  实例对象._类名__私有属性名字
