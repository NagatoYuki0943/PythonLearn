"""
Python可以使用 id() 查看变量的引用,可以认为id值是内存地址的别名
Python数据传递的是引用(其他语言是复制出新的一份出来),不过修改的时候就是新的地址了


python中全局变量可以再函数中直接使用,不过对比不可变类型(bool,int,float,string,tuple),不能被修改,除非用global引入
    对于可变类型(list,set,dict),可以修改里面的值,但是不能直接 = 赋值,除非使用global
函数参数没法修改不可变类型的值,只能修改可变类型里面的值,python本身就是引用传值,所以没有其他引用了

C++中全局变量可以直接被函数修改,不用global
变量直接传递给函数没有改变,要使用指针或引用,对比数组直接改变值了,因为传递的就是指针

php中全局变量和数组只有在函数中使用global引入才能被查看和修改,
函数参数要使用引用传递才能修改变量和数组中的值


C++ 引用
    int a = 10;
    //取地址
    cout << &a << endl;     //0x62fe1c
    //指针, &a取地址
    int *b = &a;
    cout << b << endl;      //0x62fe1c
    cout << *b << endl;     //10
    //引用
    int &c = a;
    cout << c << endl;      //10

"""

# 将数据10 存储到变量a中,本质是将数据10所在的内存引用地址保存到变量a中
a = 1
# 将变量a中的内存引用地址保存到b中
b = a
# 将a,b中引用存储的值打印出来
print(a, b)  # 1 1
print(id(a), id(b))  # 1451540900144 1451540900144

# 重新赋值之后指向的地址就不同了
b = 2
print(a, b)  # 1 2
print(id(a), id(b))  # 2536584603952 2536584603984
print("*" * 50)


# list也是引用传递
# 变量存储了list的引用地址
# 引用中每一个值存放的都是引用数据的地址
list1 = [1, 2, 3]
list2 = list1
print(list1, id(list2))  # [1, 2, 3] 2149354580928
print(list2, id(list2))  # [1, 2, 3] 2149354580928
print("*" * 50)

# 添加数据之后,两个引用都会变
list1.append(4)
list2[2] = 5
print(list1, id(list2))  # [1, 2, 5, 4] 2000888539712
print(list2, id(list2))  # [1, 2, 5, 4] 2000888539712
