"""
1.打开文件,将文件从硬盘存到内存中
open(file, mode='r', ..., encoding=None)
    file:       文件名
    model:      文件打开方式 r:读  w:写  a:append追加
         r     以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。文件不存在就报错
         w     打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。
         a     打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。
               也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。
         rb    以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。
         wb    以二进制格式打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。
         ab    以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也
               就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。

         + 代表可读可写,指针操作复杂,一般不用
         r+    打开一个文件用于读写。文件指针将会放在文件的开头。
         w+    打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。
         a+    打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。
         rb+   以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。
         wb+   以二进制格式打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。
         ab+   以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。

    encoding:   文件编码格式 gbk, utf-8
返回值,文件对象,后续文件对象都需要这个文件对象进行
    文件找不到就报错
f = open('/文件/1.txt', 'w', encoding='utf-8')


2.读写文件
    一次读取文件中的所有内容,返回文件内容
    文件对象.read(n)
    n: 一次性读取多少字节的内容,默认不写读取全部内容
    读到文件末尾会返回None
        buff = f.read()

    一次读取一行内容
    文件对象.readline()

    一次读取所有行,返回值是列表,每一项都是一行内容
    文件对象.readlines()


    写入内容,返回值：写入的字节数
    文件对象.write(字符串)
        f.write('你好啊\n')


3.关闭文件,将内存中的文件同步到硬盘中
    文件.close()

"""

# 以只读的方式打开当前目录中文件
f = open("文件/1.txt", "r", encoding="utf-8")
buff = f.read()
print(buff)  # 1111


"""
C++
/**
 *
 * 文件类型分为两种:
 *      1.文本文件    -文件以文本的ASCII码形式存储在计算机中
 *      2.二进制文件   -文件以文本的二进制形式存储在计算机中,用户一半不能直接读懂它们
 * 操作文件的三大类:
 *      1.ofstream:写操作  output
 *      2.ifstream:读操作  input
 *      3.fstream:读写操作  file
 */
/**
 * 写文件步骤
 *  1.包含头文件     #include <fstream>
 *  2.创建对象流     ofstream ofs;
 *  3.打开方式      ofs.open("文件路径",打开方式);
 *  4.写数据        ofs << "写入的数据"
 *  5.关闭文件      ofs.close();
 */
/**
 * 文件打开方式      解释
 * ios::out        为写文件而打开文件
 * ios::in         为读文件而打开文件
 * ios::ate        初始位置:文件尾
 * ios::app        追加方式写文件
 * ios::trunc      如果文件存在先删除,再创建
 * ios::binary     二进制方式
 * 注意:文件打开方式可以配合使用,利用 | 操作符
 * 例如:用二进制方式写文件 ios::binary | ios::out
 */

"""
