# 组合迭代器（Combinatoric Iterators）
# product(*iterables, repeat=1) 得到的是可迭代对象的笛卡儿积


from itertools import product


for i in product([0, 1], ["a", "b"]):
    print(i)
print("\n")
# (0, 'a')
# (0, 'b')
# (1, 'a')
# (1, 'b')


print(list(product([0, 1], ["a", "b"])))
print("\n")
# [(0, 'a'), (0, 'b'), (1, 'a'), (1, 'b')]


for i in product([0, 1], ["-", "+", "*", "/"], ["a", "b"]):
    print(i)
print("\n")
# (0, '-', 'a')
# (0, '-', 'b')
# (0, '+', 'a')
# (0, '+', 'b')
# (0, '*', 'a')
# (0, '*', 'b')
# (0, '/', 'a')
# (0, '/', 'b')
# (1, '-', 'a')
# (1, '-', 'b')
# (1, '+', 'a')
# (1, '+', 'b')
# (1, '*', 'a')
# (1, '*', 'b')
# (1, '/', 'a')
# (1, '/', 'b')


# repeat 参数则表示这些可迭代序列重复的次数
for i in product([0, 1], ["a", "b"], repeat=2):
    print(i)
print("\n")
# (0, 'a', 0, 'a')
# (0, 'a', 0, 'b')
# (0, 'a', 1, 'a')
# (0, 'a', 1, 'b')
# (0, 'b', 0, 'a')
# (0, 'b', 0, 'b')
# (0, 'b', 1, 'a')
# (0, 'b', 1, 'b')
# (1, 'a', 0, 'a')
# (1, 'a', 0, 'b')
# (1, 'a', 1, 'a')
# (1, 'a', 1, 'b')
# (1, 'b', 0, 'a')
# (1, 'b', 0, 'b')
# (1, 'b', 1, 'a')
# (1, 'b', 1, 'b')
