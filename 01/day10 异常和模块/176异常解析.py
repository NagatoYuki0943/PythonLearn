"""
发生异常,会向外层进行传递,知道被捕获或者程序报错为止
内层程序发生的代码会向外层传递,直到被捕获
"""

num = input("请输入数字:")


try:
    try:
        a = int(num)
    except ZeroDivisionError:
        # 故意写错异常类型 查看异常的向上传递过程
        print("发生异常")
    finally:
        print("我都执行了")

    num = 10 / a
    print(f"计算结果:<<{num}>>")
except Exception as e:
    print(e)

print("=" * 50)


def func1():
    print("-------1-------")
    num = int(input("请输入数字:"))
    num = 10 / num
    print(num)
    print("-------2-------")


def func2():
    print("-------3-------")
    func1()
    print("-------4-------")


try:
    print("-------5-------")
    func2()
    print("-------6-------")
except Exception as e:
    print("-------7-------")
    print(e)
    print("-------8-------")

# 出了错误,后面的都不执行了,直接执行except
# -------5-------
# -------3-------
# -------1-------
# 请输入数字:0
# -------7-------
# division by zero
# -------8-------
#
# 没有错误,依次输出
# -------5-------
# -------3-------
# -------1-------
# 请输入数字:1
# 10.0
# -------2-------
# -------4-------
# -------6-------
