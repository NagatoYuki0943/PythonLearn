"""
__name__ 变量,在每个模块即代码块文件中都有,是系统自己定义的

模块的导入,会执行模块中的代码

每个python模块（python文件）都包含内置的变量 __name__，当该模块被直接执行的时候，__name__ 等于文件名（包含后缀 .py ）；
如果该模块 import 到其他模块中，则该模块的 __name__ 等于模块名称（不包含后缀.py）。
而 “__main__” 始终指当前执行模块的名称（包含后缀.py）。进而当模块被直接执行时，__name__ == 'main' 结果为真。

通俗的理解：当*.py文件被直接运行时，if __name__ ==’__main__'之下的代码块将被运行；
当.py文件以模块形式被导入时，if __name__ == '__main__'之下的代码块不被运行。

"""

import my_module5  # 模块的导入,会执行模块中的代码


# my_module5
# 这一行是my_module5中 print(__name__) 打印的,
# 而单独运行 my_module5 时,打印的是 __main__ , 说明自己运行和被引入是 __name__ 代表内容不同,通过 if 判断来进行执行代码

my_module5.add(100, 200)  # 300
