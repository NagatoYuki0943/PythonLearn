'''
__name__ 变量,在每个模块即代码块文件中都有,是系统自己定义的

模块的导入,会执行模块中的代码

每个python模块（python文件）都包含内置的变量 __name__，当该模块被直接执行的时候，__name__ 等于文件名（包含后缀 .py ）；
如果该模块 import 到其他模块中，则该模块的 __name__ 等于模块名称（不包含后缀.py）。
而 “__main__” 始终指当前执行模块的名称（包含后缀.py）。进而当模块被直接执行时，__name__ == 'main' 结果为真。

通俗的理解：当*.py文件被直接运行时，if __name__ ==’__main__'之下的代码块将被运行；
当.py文件以模块形式被导入时，if __name__ == '__main__'之下的代码块不被运行。

'''

def add(a, b):
    print(a + b)

print(__name__)         # __main__  被引入时打印 my_module5, 说明被引入和自己执行 __name__ 代表的内容不同


if __name__ == '__main__':
    add(10, 20)         # 30

    #1. 直接运行当前代码,值为 __main__
    #2. 把文件作为模块导入时,运行,结果是 文件名
    print(__name__)     # __main__