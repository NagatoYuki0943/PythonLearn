"""
文本文件:   能够使用记事本打开的文件
二进制文件: 具有特殊格式的文件 mp4,mp3

不能指定 encoding 参数,二进制打开方式如下,不管读取和书写都需要使用二进制方式
    rb    wb    ab

    r   以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。
    w   打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。
    a   打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。
        也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。
    rb  以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。
    wb  以二进制格式打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。
    ab  以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也
        就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。

    r+  打开一个文件用于读写。文件指针将会放在文件的开头。
    w+  打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。
    a+  打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。
    rb+ 以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。
    wb+ 以二进制格式打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。
    ab+ 以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。

字符串.encode() 将字符串转化为二进制格式字符串
字符串.decode() 将二进制字符串转化为字符串
"""

f = open("文件/3.m", "wb")

# 字符串.encode() 将字符串转化为二进制格式字符串
f.write("你好".encode())
f.close()

f1 = open("文件/3.m", "rb")
res = f1.read()
print(res)  # b'\xe4\xbd\xa0\xe5\xa5\xbd'   b代表二进制  x代表16进制

# 字符串.decode() 将二进制字符串转化为字符串
print(res.decode())  # 你好
f1.close()
